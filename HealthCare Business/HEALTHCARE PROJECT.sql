CREATE DATABASE HEALTHCARE_PROJECT;
USE HEALTHCARE_PROJECT;
SELECT*FROM ENCOUNTERS;
SELECT*FROM ORGANIZATIONS;
SELECT*FROM PATIENTS;
SELECT*FROM PAYERS;
SELECT*FROM PROCEDURES;

-----Evaluating Financial Risk by Encounter Outcome-----

SELECT 
    E.REASONCODE,
    E.REASONDESCRIPTION,
    SUM(E.TOTAL_CLAIM_COST - E.PAYER_COVERAGE) AS TOTAL_UNCOVERED_COST,
    COUNT(E.ID) AS ENCOUNTER_COUNT,
    P.RACE,
    P.ETHNICITY,
    P.GENDER,
    (YEAR(GETDATE()) - YEAR(P.BIRTHDATE)) AS AGE
FROM 
    ENCOUNTERS E
JOIN 
    PATIENTS P ON E.PATIENT = P.ID
GROUP BY 
    E.REASONCODE, E.REASONDESCRIPTION, P.RACE, P.ETHNICITY, P.GENDER, YEAR(GETDATE()) - YEAR(P.BIRTHDATE)
ORDER BY 
    TOTAL_UNCOVERED_COST DESC;


----Identifying Patients with Frequent High-Cost Encounters----

SELECT 
    PATIENT,
    YEAR(START) AS YEAR,
    COUNT(ID) AS NUMBER_OF_ENCOUNTERS,
    SUM(TOTAL_CLAIM_COST) AS TOTAL_COST
FROM 
    ENCOUNTERS
WHERE 
    TOTAL_CLAIM_COST > 10000 -- HIGH-COST THRESHOLD
GROUP BY 
    PATIENT, YEAR(START)
HAVING 
    COUNT(ID) > 3 -- MORE THAN 3 ENCOUNTERS
ORDER BY 
    TOTAL_COST DESC;

----Identifying Risk Factors Based on Demographics and Encounter Reasons----

WITH TOPREASONCODES AS (
    SELECT 
        E.REASONCODE,
        E.REASONDESCRIPTION,
        COUNT(E.ID) AS ENCOUNTER_COUNT,
        ROW_NUMBER() OVER (ORDER BY COUNT(E.ID) DESC) AS RN
    FROM 
        ENCOUNTERS E
    GROUP BY 
        E.REASONCODE, E.REASONDESCRIPTION
)
SELECT 
    TR.REASONCODE,
    TR.REASONDESCRIPTION,
    P.RACE,
    P.ETHNICITY,
    P.GENDER,
    P.ZIP,
    (YEAR(GETDATE()) - YEAR(P.BIRTHDATE)) AS AGE,
    COUNT(E.ID) AS ENCOUNTER_COUNT,
    SUM(E.TOTAL_CLAIM_COST) AS TOTAL_CLAIM_COST,
    SUM(E.TOTAL_CLAIM_COST - E.PAYER_COVERAGE) AS TOTAL_UNCOVERED_COST
FROM 
    ENCOUNTERS E
JOIN 
    (SELECT REASONCODE, REASONDESCRIPTION FROM TOPREASONCODES WHERE RN <= 3) TR 
    ON E.REASONCODE = TR.REASONCODE
JOIN 
    PATIENTS P ON E.PATIENT = P.ID
GROUP BY 
    TR.REASONCODE, TR.REASONDESCRIPTION, P.RACE, P.ETHNICITY, P.GENDER, P.ZIP, YEAR(GETDATE()) - YEAR(P.BIRTHDATE)
ORDER BY 
    ENCOUNTER_COUNT DESC;




-----Assessing Payer Contributions for Different Procedure Types-----4

SELECT 
    P.NAME AS PAYER_NAME,
    PR.DESCRIPTION AS PROCEDURE_DESCRIPTION,
    SUM(PR.BASE_COST) AS TOTAL_PROCEDURE_COST,
    SUM(E.TOTAL_CLAIM_COST) AS TOTAL_CLAIM_COST,
    SUM(E.PAYER_COVERAGE) AS TOTAL_PAYER_COVERAGE,
    SUM(E.TOTAL_CLAIM_COST - E.PAYER_COVERAGE) AS TOTAL_GAP
FROM PROCEDURES PR
JOIN ENCOUNTERS E ON PR.ENCOUNTER = E.ID
JOIN PAYERS P ON E.PAYER = P.ID
GROUP BY P.NAME, PR.DESCRIPTION;




----Identifying Patients with Multiple Procedures Across Encounters----


SELECT 
    P.PATIENT,
    P.REASONCODE,
    COUNT(DISTINCT P.CODE) AS UNIQUE_PROCEDURES,
    COUNT(DISTINCT P.ENCOUNTER) AS UNIQUE_ENCOUNTERS
FROM 
    PROCEDURES P
GROUP BY 
    P.PATIENT, P.REASONCODE
HAVING 
    COUNT(DISTINCT P.CODE) > 1 AND COUNT(DISTINCT P.ENCOUNTER) > 1
ORDER BY 
    UNIQUE_PROCEDURES DESC;



----Analyzing Patient Encounter Duration for Different Classes-----
SELECT 
    E.ORGANIZATION,
    E.ENCOUNTERCLASS,
    AVG(DATEDIFF(HOUR, E.START, E.STOP)) AS AVG_DURATION_HOURS,
    SUM(CASE WHEN DATEDIFF(HOUR, E.START, E.STOP) > 24 THEN 1 ELSE 0 END) AS ENCOUNTERS_EXCEEDING_24_HOURS
FROM 
    ENCOUNTERS E
GROUP BY 
    E.ORGANIZATION, E.ENCOUNTERCLASS
ORDER BY 
    AVG_DURATION_HOURS DESC;



